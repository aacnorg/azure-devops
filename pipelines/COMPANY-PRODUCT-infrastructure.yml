trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - .azure/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: subscriptionService
    type: string 
    default: "SERVICE_CONNECTION_NAME"

variables:
  - template: ../variables/common.yml
      
stages:
  - stage: development
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), ne(variables['Build.Reason'], 'PullRequest'))
    variables:
      - template: ../variables/development.yml

    jobs:
      - job: deploy_landing_zone
        steps:
          - template: ../steps/landingzone-infrastructure-steps.yml
            parameters:
              armPath: '$(armPath)'
              subscriptionId: '$(subscriptionId)'
              subscriptionService: '${{ parameters.subscriptionService }}'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appiName: '$(appiName)'
              kvName: '$(kvName)'
              stName: '$(stName)'
              workSubscriptionId: '$(subscriptionId)'
              workName: '$(workName)'
              workResourceGroupName: '$(workResourceGroupName)'
              workLocation: '$(workLocation)'

          - task: AzureCLI@2
            inputs:
              azureSubscription: '${{ parameters.subscriptionService }}'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az keyvault set-policy --name '$(kvName)' --object-id $(serviceConnectionObjectId1) --secret-permissions get list
                az keyvault set-policy --name '$(kvName)' --object-id $(serviceConnectionObjectId2) --secret-permissions get list

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: "Validate $(sqlName)"
            inputs:
                deploymentScope: "Resource Group"
                azureResourceManagerConnection: "${{ parameters.subscriptionService }}"
                subscriptionId: "$(subscriptionId)"
                action: "Create Or Update Resource Group"
                resourceGroupName: "$(rgName)"
                location: "$(rgLocation)"
                templateLocation: "Linked artifact"
                csmFile: "$(armPath)/sqldb-sqldatabase.json"
                csmParametersFile: "$(armPath)/sqldb-sqldatabase.parameters.json"
                deploymentMode: "Validation"
                overrideParameters: -name "$(sqldbName)" -sqlName "$(sqlName)" -adminLogin "$(sqlUser)" -adminPassword "$(sqlPassword)"

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: "Deploy $(sqlName)"
            inputs:
                deploymentScope: "Resource Group"
                azureResourceManagerConnection: "${{ parameters.subscriptionService }}"
                subscriptionId: "$(subscriptionId)"
                action: "Create Or Update Resource Group"
                resourceGroupName: "$(rgName)"
                location: "$(rgLocation)"
                templateLocation: "Linked artifact"
                csmFile: "$(armPath)/sqldb-sqldatabase.json"
                csmParametersFile: "$(armPath)/sqldb-sqldatabase.parameters.json"
                deploymentMode: "Incremental"
                overrideParameters: -name "$(sqldbName)" -sqlName "$(sqlName)" -adminLogin "$(sqlUser)" -adminPassword "$(sqlPassword)"
