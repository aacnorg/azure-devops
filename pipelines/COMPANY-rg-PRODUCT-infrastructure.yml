trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - infrastructure/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: appcsSettings
    type: object
    default: 
      - key: 'Company:Product:InfrastructureType:ItemName'
        value: 'ItemValue'
      - key: 'Company:Product:InfrastructureType:ItemName2'
        value: 'ItemValue2'

variables:
  - template: variables/development.yml
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
        
stages:
  - stage: development
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: variables/development.yml

    jobs:
      - job: deploy_landing_zone
        steps:
          - template: steps/lz-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appiName: '$(appiName)'
              kvName: '$(kvName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_appcs_infrastructure
        dependsOn: deploy_landing_zone
        steps:
          - template: steps/appcs-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appcsName: '$(appcsName)'
              appcsSku: '$(appcsSku)'

      - job: deploy_appcs_settings
        dependsOn: deploy_appcs_infrastructure
        steps:
          - template: steps/appcs-settings-steps.yml
            parameters:
              subscriptionName: '$(subscriptionName)'
              rgEnvironment: '$(rgEnvironment)'
              appcsName: '$(appcsName)'
              appcsSettingsFile: '$(appcsSettingsFile)'
              tempPath: '$(tempPath)'
              appcsSettings: '${{ parameters.appcsSettings }}'

      - job: deploy_sb_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/sb-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              sbName: '$(sbName)'
              sbSku: '$(sbSku)'

      - job: deploy_func_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/func-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              rgEnvironment: '$(rgEnvironment)'
              appiKey: '$(appiKey)'
              appiConnection: '$(appiConnection)'
              funcName: '$(funcName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_webjob_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/webjob-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              rgEnvironment: '$(rgEnvironment)'
              planName: '$(planName)'
              webjobName: '$(webjobName)'

  - stage: production
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: variables/production.yml

    jobs:
      - job: deploy_landing_zone
        steps:
          - template: steps/lz-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appiName: '$(appiName)'
              kvName: '$(kvName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_appcs_infrastructure
        dependsOn: deploy_landing_zone
        steps:
          - template: steps/appcs-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appcsName: '$(appcsName)'
              appcsSku: '$(appcsSku)'

      - job: deploy_appcs_settings
        dependsOn: deploy_appcs_infrastructure
        steps:
          - template: steps/appcs-settings-steps.yml
            parameters:
              subscriptionName: '$(subscriptionName)'
              rgEnvironment: '$(rgEnvironment)'
              appcsName: '$(appcsName)'
              appcsSettingsFile: '$(appcsSettingsFile)'
              tempPath: '$(tempPath)'
              appcsSettings: '${{ parameters.appcsSettings }}'

      - job: deploy_sb_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/sb-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              sbName: '$(sbName)'
              sbSku: '$(sbSku)'

      - job: deploy_func_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/func-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              rgEnvironment: '$(rgEnvironment)'
              appiKey: '$(appiKey)'
              appiConnection: '$(appiConnection)'
              funcName: '$(funcName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_webjob_infrastructure
        dependsOn: deploy_appcs_settings
        steps:
          - template: steps/webjob-infrastructure-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              rgEnvironment: '$(rgEnvironment)'
              planName: '$(planName)'
              webjobName: '$(webjobName)'      
