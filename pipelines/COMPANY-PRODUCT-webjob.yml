trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - src/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: workerSettings
    type: object
    default: 
      - name: 'APPINSIGHTS_INSTRUMENTATIONKEY'
        value: '${{ variables.appiKey}}'
        slotSetting: false
      - name: 'APPLICATIONINSIGHTS_CONNECTION_STRING'
        value: '${{ variables.appiConnection}}'
        slotSetting: false        
      - name: 'ASPNETCORE_ENVIRONMENT'
        value: '${{ variables.rgEnvironment}}'
        slotSetting: false
      - name: 'AzureWebJobsDashboard'
        value: '${{ variables.stConnection}}'
        slotSetting: false
      - name: '${{ variables.appcsEnvironmentVariable}}'
        value: '${{ variables.appcsConnection}}'
        slotSetting: false
      - name: '${{ variables.stEnvironmentVariable}}'
        value: '${{ variables.stConnection}}'
        slotSetting: false

variables:
  - template: ../variables/development.yml
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'

stages:
  - stage: development
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: ../variables/development.yml
      
    jobs:    
      - job: build_webjob
        steps:
          - template: ../steps/webjob-build-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              archiveFile: '$(archiveFile)'
              srcPath: '$(webjobPath)'
              webjobName: '${{ variables.webjobName}}'
              cronSchedule: '${{ variables.webjobSchedule}}'

      - job: test_webjob
        dependsOn: build_webjob
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              unitPath: $(webjobPath)
              rgEnvironment: '${{ variables.rgEnvironment}}'
              appcsEnvironmentVariable: '${{ variables.appcsEnvironmentVariable}}'
              appcsConnection: '${{ variables.appcsConnection}}'
              stEnvironmentVariable: '${{ variables.stEnvironmentVariable}}'
              stConnection: '${{ variables.stConnection}}'

      - job: settings_webjob
        dependsOn: build_webjob
        steps:
          - template: ../steps/webjob-settings-steps.yml
            parameters:
              subscriptionName: '$(subscriptionName)'
              rgEnvironment: '${{ variables.rgEnvironment}}'
              webjobName: '${{ variables.webjobName}}'
              appSettings: '${{ parameters.workerSettings }}'

      - job: deploy_webjob
        dependsOn: settings_webjob
        steps:
          - template: ../steps/webjob-deploy-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              archiveFile: '$(archiveFile)'
              webjobName: '${{ variables.webjobName}}'
              subscriptionId: '${{ variables.subscriptionId}}'
              subscriptionName: '$(subscriptionName)'

  - stage: production
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: ../variables/production.yml    

    jobs:    
      - job: build_webjob
        steps:
          - template: ../steps/webjob-build-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              archiveFile: '$(archiveFile)'
              srcPath: '$(webjobPath)'
              webjobName: '${{ variables.webjobName}}'
              cronSchedule: '${{ variables.webjobSchedule}}'

      - job: test_webjob
        dependsOn: build_webjob
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              unitPath: $(webjobPath)
              rgEnvironment: '${{ variables.rgEnvironment}}'
              appcsEnvironmentVariable: '${{ variables.appcsEnvironmentVariable}}'
              appcsConnection: '${{ variables.appcsConnection}}'
              stEnvironmentVariable: '${{ variables.stEnvironmentVariable}}'
              stConnection: '${{ variables.stConnection}}'

      - job: settings_webjob
        dependsOn: build_webjob
        steps:
          - template: ../steps/webjob-settings-steps.yml
            parameters:
              subscriptionName: '$(subscriptionName)'
              rgEnvironment: '${{ variables.rgEnvironment}}'
              webjobName: '${{ variables.webjobName}}'
              appSettings: '${{ parameters.workerSettings }}'

      - job: deploy_webjob
        dependsOn: settings_webjob
        steps:
          - template: ../steps/webjob-deploy-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              archiveFile: '$(archiveFile)'
              webjobName: '${{ variables.webjobName}}'
              subscriptionId: '${{ variables.subscriptionId}}'
              subscriptionName: '$(subscriptionName)'