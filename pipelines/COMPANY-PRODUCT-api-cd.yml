trigger:
  batch: true
  branches:
    include:
    - 'develop'
    - 'main'

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: Windows-latest

resources:
  pipelines:
  - pipeline: CI_PIPELINE_NAME
    source: CI_PIPELINE_NAME
    trigger: none

stages:
  - stage: development
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), ne(variables['Build.Reason'], 'PullRequest'))  
    variables:
      - template: ../variables/development.yml
    jobs:
      - deployment: DeployAPI
        environment:
          name: Development
          resourceName: VIRTUAL_MACHINE_NAME
        strategy:
          runOnce:
            deploy:
              steps:
              - task: DownloadPipelineArtifact@2
                displayName: Download Artifacts from Build Pipeline 
                inputs:
                 project: 'NTI'
                 buildType: 'specific'
                 definition: '2'
                 specificBuildWithTriggering: true
                 buildVersionToDownload: 'latest'
                 targetPath: '$(artifactsPath)'
                      
              - script:
                  netsh http show sslcert 
                displayName: Show SSL Certificates 
              
              - task: CmdLine@2
                displayName: Remove HTTPS Bindings 
                condition: false
                inputs:
                    script: |
                      netsh http delete sslcert ipport=0.0.0.0:443
                      netsh http delete sslcert ipport=0.0.0.0:30001
                      setx ASPNETCORE_ENVIRONMENT $(rgEnvironment) /M

              - task: IISWebAppManagementOnMachineGroup@0
                displayName: IIS Web App Create - $(siteDNS)
                condition: false
                inputs:
                  EnableIIS: true
                  IISDeploymentType: 'IISWebsite'
                  ActionIISWebsite: 'CreateOrUpdateWebsite'
                  WebsiteName: '$(siteDNS)'
                  WebsitePhysicalPath: '%SystemDrive%\sites\$(siteDNS)'
                  WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                  AddBinding: true
                  Bindings: '{"bindings":[{"protocol":"https","ipAddress":"All Unassigned","port":"30001","hostname":"","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"https","ipAddress":"All Unassigned","port":"443","hostname":"$(siteDNS)","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"$(siteDNS)","sslThumbprint":"","sniFlag":false}]}'
                  CreateOrUpdateAppPoolForWebsite: true
                  ConfigureAuthenticationForWebsite: true
                  AppPoolNameForWebsite: '$(siteDNS)'
                  DotNetVersionForWebsite: 'v4.0'
                  PipeLineModeForWebsite: 'Integrated'
                  AppPoolIdentityForWebsite: 'SpecificUser'
                  AppPoolUsernameForWebsite: '$(netforumUser)'
                  AppPoolPasswordForWebsite: '$(netforumPassword)'

              - task: IISWebAppManagementOnMachineGroup@0
                displayName: IIS App Pool - $(siteDNS)\$(productName)
                inputs:
                  IISDeploymentType: 'IISWebApplication'
                  ParentWebsiteNameForApplication: '$(siteDNS)'
                  VirtualPathForApplication: '/$(productName)'
                  PhysicalPathForApplication: '%SystemDrive%\sites\$(siteDNS)\$(productName)'
                  CreateOrUpdateAppPoolForApplication: true
                  AppPoolNameForApplication: '$(siteDNS)-$(productName)'
                  DotNetVersionForApplication: 'v4.0'
                  PipeLineModeForApplication: 'Integrated'
                  AppPoolIdentityForApplication: 'SpecificUser'
                  AppPoolUsernameForApplication: '$(netforumUser)'
                  AppPoolPasswordForApplication: '$(netforumPassword)'

              - task: IISWebAppDeploymentOnMachineGroup@0
                displayName: Deploy IIS Website/App - $(siteDNS)\$(productName)
                inputs:
                  WebSiteName: '$(siteDNS)'
                  VirtualApplication: '$(productName)'
                  Package: '$(artifactsPath)\drop\WebApi.zip'
                  TakeAppOfflineFlag: true
