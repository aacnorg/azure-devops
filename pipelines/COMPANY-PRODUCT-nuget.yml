trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - src/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: nugetService
    type: string 
    default: "COMPANY-nuget-001"
  - name: nugetId
    type: string 
    default: "$(nugetId)"
  - name: versionToReplace
    type: string
    default: "1.0.0"

variables:
  - template: ../variables/common.yml

stages:
  - stage: development
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: ../variables/development.yml
      
    jobs:
      - job: build_src
        steps:
          - template: ../steps/dotnet-build-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              scriptsPath: '$(scriptsPath)'
              srcPath: '${{ variables.srcPath}}'

      - job: test_src
        dependsOn: build_src
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              testPath: '$(System.DefaultWorkingDirectory)/src'
              arguments: '--filter TestCategory!=Integration'
              appcsEnvironmentVariable: '${{ parameters.appcsEnvironmentVariable }}'
              appcsConnection: '${{ parameters.appcsConnection }}'
              rgEnvironment: '${{ variables.rgEnvironment}}'

      - job: pack_src
        dependsOn: test_src
        steps:
          - template: ../steps/dotnet-pack-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              scriptsPath: '$(scriptsPath)'
              srcPath: '${{ variables.srcPath}}'
              versionToReplace: '${{ parameters.versionToReplace }}'

      - job: deploy_nuget
        dependsOn: pack_src
        steps:
          - template: ../steps/nuget-deploy-internal-steps.yml
            parameters:              
              artifactsPath: '${{ variables.artifactsPath}}'
              nugetId:  '${{ parameters.nugetId }}'

  - stage: production
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: ../variables/production.yml    

    jobs:
      - job: build_src
        steps:
          - template: ../steps/dotnet-build-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              scriptsPath: '$(scriptsPath)'
              srcPath: '${{ variables.srcPath}}'

      - job: test_src
        dependsOn: build_src
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              testPath: '$(System.DefaultWorkingDirectory)/src'
              arguments: '--filter TestCategory!=Integration'
              appcsEnvironmentVariable: '${{ parameters.appcsEnvironmentVariable }}'
              appcsConnection: '${{ parameters.appcsConnection }}'
              rgEnvironment: '${{ variables.rgEnvironment}}'

      - job: pack_src
        dependsOn: test_src
        steps:
          - template: ../steps/dotnet-pack-steps.yml
            parameters:
              artifactsPath: '${{ variables.artifactsPath}}'
              scriptsPath: '$(scriptsPath)'
              srcPath: '${{ variables.srcPath}}'
              versionToReplace: '${{ parameters.versionToReplace }}'

      - job: deploy_nuget
        dependsOn: pack_src
        steps:
          - template: ../steps/nuget-deploy-external-steps.yml
            parameters:              
              artifactsPath: '${{ variables.artifactsPath}}'
              nugetService:  '${{ parameters.nugetService }}'