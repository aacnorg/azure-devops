trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - src/Core/*
    - src/Infrastructure/*
    - src/Specs/*
    - src/Presentation/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - template: ../variables/common.yml

stages:
  - stage: build
    variables:
      - template: ../variables/development.yml
      
    jobs:    
      - job: build_api
        steps:
          - template: ../steps/dotnet-build-steps.yml
            parameters:
              artifactsPath: '$(artifactsPath)'
              dotnetVersion: '$(dotnetVersion)'
              srcPath: '$(srcPath)'

      - task: replacetokens@3
        displayName: 'ReplaceTokens with Variables'
        inputs:
          rootDirectory: '$(apiPath)'
          targetFiles: '**/appsettings.$(rgEnvironment).json'
          encoding: 'auto'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: true
          tokenPrefix: '__'
          tokenSuffix: '__'
          useLegacyPattern: false
          enableTelemetry: false              

      - job: test_api
        dependsOn: build_api      
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              dotnetVersion: '$(dotnetVersion)'
              testPath: '$(unitPath)'
              testProject: '$(unitProject)'
              restorePath: '$(srcPath)'
              appcsEnvironmentVariable: '$(appcsEnvironmentVariable)'
              appcsConnection: '$(appcsConnection)'
              rgEnvironment: '$(rgEnvironment)'

      - job: package_api
        dependsOn: test_api
        steps:
          - template: ../steps/dotnet-publish-steps.yml
            parameters:
              artifactsPath: '$(artifactsPath)'
              dotnetVersion: '$(dotnetVersion)'
              restorePath: '$(srcPath)'
              scriptsPath: '$(scriptsPath)'
              srcPath: '$(apiPath)'
              srcProject: '$(apiProject)'